module pybase (*)

import conventions

source py from "core.py"
 ( "mlc_run" as run
 , "mlc_id" as id
 , "mlc_at" as at
 , "mlc_ifelse" as ifelse
 , "mlc_map" as map
 , "mlc_map" as zipWith
 , "mlc_append" as append
 , "mlc_filter" as filter
 , "mlc_fold" as fold
 , "mlc_enumerateWith" as enumerateWith
 , "mlc_elem" as elem
 , "mlc_add" as add
 , "mlc_sub" as sub
 , "mlc_mul" as mul
 , "mlc_div" as div
 , "mlc_neg" as neg
 -- combinator
 , "mlc_seq" as seq
 , "mlc_const" as const
 -- tuples
 , "mlc_fst" as fst
 , "mlc_snd" as snd
 , "mlc_fst" as fst3 -- same as fst in Python
 , "mlc_snd" as snd3 -- same as snd in Python
 , "mlc_thr3" as thr3
 -- new for case study
 , "mlc_onFst" as onFst
 , "mlc_onSnd" as onSnd
 , "mlc_concat" as concat
 , "mlc_sleep" as sleep
 , "mlc_shard" as shard
 , "mlc_head" as head -- [a] -> a
 , "mlc_tail" as tail -- [a]_{n} -> [a]_{n-1}
 , "mlc_init" as init -- [a]_{n>i} -> [a]_{n-i}
 , "mlc_last" as last -- [a] -> a
 , "mlc_take" as take -- i:Int -> [a]_{n>i} -> [a]_{n=i}
 , "mlc_drop" as drop -- i:Int -> [a]_{n>i} -> [a]_{n-i}
 , "mlc_join" as join
 -- maps
 , "mlc_filterKey" as filterKey
 , "mlc_filterVal" as filterVal
 , "mlc_readMap" as readMap
 , "mlc_keys" as keys
 , "mlc_vals" as vals
 -- comparators
 , "mlc_gt" as gt
 , "mlc_lt" as lt
 , "mlc_ge" as ge
 , "mlc_le" as le
 , "mlc_eq" as eq
 , "mlc_ne" as ne
 , "mlc_not" as not
 , "mlc_and" as and
 , "mlc_or" as or
 )

source py
 ( "len" as length
 , "len" as lengthS
 )


-------------------------------------------------------------------------------
--                 Pack and Unpack internal functions                          
-- These functions are used by morloc internally for (de)serialization of types
-- that cannot be automatically (de)serialized into/from JSON. They should not
-- be exported.
-------------------------------------------------------------------------------


type Py => (Map key val) = "dict" key val

instance Packable ([key],[val]) (Map key val) where
  source py from "data.py"
   ( "morloc_packMap" as pack
   , "morloc_unpackMap" as unpack
   )
